---
# How to configure keycloak & traefik: https://geek-cookbook.funkypenguin.co.nz/ha-docker-swarm/traefik-forward-auth/keycloak/

- name: "Create KeyCloak directories"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ keycloak_data_directory }}/creds"

- name: Create Docker keycloak network
  docker_network:
    name: keycloak

# After some testing it occurred that traefik-forward-auth is not working with users without email
# Keep that in mind if logging in as default 'admin' user
- name: "Traefik AuthForwarding container"
  docker_container:
    name: traefik-forward-auth
    image: thomseddon/traefik-forward-auth
    pull: true
    labels:
      traefik.enable: "true"
      traefik.http.services.traefik-fwd-auth-svc.loadbalancer.server.port: "4181"
      traefik.http.routers.traefik-fwd-auth.rule: "Host(`auth.{{ ansible_nas_domain }}`)"
      traefik.http.routers.traefik-fwd-auth.tls: "true"
      traefik.http.routers.traefik-fwd-auth.middlewares: "auth-sso"
    links:
      - "traefik:keycloak.{{ ansible_nas_domain }}"
    env:
      PROVIDERS_OIDC_ISSUER_URL: "https://keycloak.{{ ansible_nas_domain }}/auth/realms/master"
      PROVIDERS_OIDC_CLIENT_ID: "{{ keycloak_proxy_client_id }}"
      PROVIDERS_OIDC_CLIENT_SECRET: "{{ keycloak_proxy_secret }}"
      DEFAULT_PROVIDER: "oidc"
      SECRET: "{{ lookup('password', keycloak_data_directory + '/creds/cookie_secret length=32') }}"
      AUTH_HOST: "auth.{{ ansible_nas_domain }}"
      COOKIE_DOMAIN: "{{ ansible_nas_domain }}"
      LOG_LEVEL: "debug"
    networks:
      - name: keycloak
      - name: web

# =======
# WhoAmI
# =======
- name: Create Docker whoami network
  docker_network:
    name: whoami
- name: "WhoAmI container"
  docker_container:
    name: whoami
    image: emilevauge/whoami
    pull: true
    networks:
      - name: whoami
- name: WhoAmI auth proxy config template
  template:
    src: keycloak/gatekeeper.yml
    dest: "{{ keycloak_data_directory }}/whoami.gk.yml"
  vars:
    gk_client_id: "{{ keycloak_proxy_client_id }}"
    gk_client_secret: "{{ keycloak_proxy_secret }}"
    gk_redirect_url: "https://whoami.{{ ansible_nas_domain }}"
    gk_upstream_url: "http://whoami"
    gk_session_secret: "1234567890123456"
- name: "WhoAmI auth proxy"
  docker_container:
    name: gatekeeper-whoami
    image: keycloak/keycloak-gatekeeper
    pull: true
    volumes:
      - "{{ keycloak_data_directory }}/whoami.gk.yml:/config.yml"
    links:
      - "traefik:keycloak.{{ ansible_nas_domain }}"
    entrypoint:
      - /opt/keycloak-gatekeeper
      - --config=/config.yml
    labels:
      traefik.enable: "true"
      traefik.http.services.whoami-gk-svc.loadbalancer.server.port: "3000"
      traefik.http.routers.whoami-gk.rule: "Host(`whoami.{{ ansible_nas_domain }}`)"
      traefik.http.routers.whoami-gk.tls: "true"
    networks:
      - name: whoami
      - name: keycloak
      - name: web
# ========
# KeyCloak
# ========

- name: "KeyCloak Docker Container"
  docker_container:
    name: keycloak
    image: "jboss/keycloak"
    pull: true
    labels:
      tags: keycloak
      traefik.enable: "true"
      traefik.http.services.keycloak-svc.loadbalancer.server.port: "8080"
      traefik.http.routers.keycloak.rule: "Host(`keycloak.{{ ansible_nas_domain }}`)"
      traefik.http.routers.keycloak.tls: "true"
      traefik.http.routers.keycloak-http-forward.rule: "Host(`keycloak.{{ ansible_nas_domain }}`) && PathPrefix(`/auth/realms/{realm:.*}`)"
      traefik.http.routers.keycloak-http-redirect.rule: "Host(`keycloak.{{ ansible_nas_domain }}`)"
      traefik.http.routers.keycloak-http-redirect.middlewares: "redirect-to-https"
    hostname: "keycloak.{{ ansible_nas_domain }}"
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 0
    env:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: "{{ lookup('password', keycloak_data_directory + '/creds/admin_password length=20') }}"
      PROXY_ADDRESS_FORWARDING: "true"
    networks:
      - name: keycloak
      - name: web
    networks_cli_compatible: false
    ports:
      - "{{ keycloak_port }}:389"
      - "{{ keycloak_port_ssl }}:636"
    restart_policy: unless-stopped
