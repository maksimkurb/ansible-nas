- name: Create Miniflux Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ miniflux_data_directory }}/postgres"

- name: Create Miniflux user on Postgres
  postgresql_user:
    name: miniflux
    password: "{{ lookup('password', creds_direcrory +'/miniflux/miniflux_postgres_passwd length=32') }}"
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
    state: present
    login_host: 127.0.0.1

- name: Create Miniflux database on Postgres
  postgresql_db:
    name: miniflux
    owner: miniflux
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
    state: present
    login_host: 127.0.0.1

- name: Enable extensions for Miniflux database on Postgres
  postgresql_ext:
    name: hstore
    db: miniflux
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
    state: present
    login_host: 127.0.0.1

- name: Create Miniflux container
  docker_container:
    name: miniflux
    image: miniflux/miniflux:latest
    purge_networks: true
    networks:
      - name: web
      - name: postgres
    pull: true
    ports:
      - "{{ miniflux_port }}:8080"
    env:
      DATABASE_URL: "postgres://miniflux:{{ lookup('password', creds_direcrory + '/miniflux/miniflux_postgres_passwd length=32') | urlencode }}@postgres/miniflux?sslmode=disable"
      RUN_MIGRATIONS: "1"
      CREATE_ADMIN: "1"
      ADMIN_USERNAME: "{{ miniflux_admin_username }}"
      ADMIN_PASSWORD: "{{ miniflux_admin_password }}"
    volumes:
    - ":/config/nginx/site-confs/default:ro"
    restart_policy: always
    memory: 1g
    labels:
      traefik.enable: "{{ miniflux_available_externally }}"
      traefik.http.services.miniflux-svc.loadbalancer.server.port: "8080"
      traefik.http.routers.miniflux.rule: "Host(`miniflux.{{ ansible_nas_domain }}`)"
      traefik.http.routers.miniflux.tls: "true"
