---
- name: Create Seafile Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ seafile_data_directory }}/seafile-data"
    - "{{ seafile_data_directory }}/mysql"

- name: Ensure required networks are present
  docker_network:
    name: "{{ item }}"
  with_items:
    - ldap
    - seafile

- name: Create Seafile database container
  docker_container:
    name: seafile-mysql
    image: mariadb:10.5
    pull: true
    purge_networks: true
    networks:
      - name: seafile
    volumes:
      - "{{ seafile_data_directory }}/mysql:/var/lib/mysql:rw"
    env:
      MYSQL_ROOT_PASSWORD: seafile
      MYSQL_LOG_CONSOLE: "true"
    restart_policy: unless-stopped
    memory: 1g

- name: Create Seafile memcached container
  docker_container:
    name: seafile-memcached
    image: memcached
    entrypoint: memcached -m 256
    pull: true
    purge_networks: true
    networks:
      - name: seafile
    restart_policy: unless-stopped

- name: Create Seafile container
  docker_container:
    name: seafile
    image: "{{ seafile_docker_image }}"
    pull: true
    purge_networks: true
    networks:
      - name: ldap
      - name: seafile
      - name: web
    volumes:
      - "{{ seafile_data_directory }}/seafile-data:/shared:rw"
    ports:
      - "{{ seafile_port }}:80"
    env:
      DB_HOST: seafile-mysql
      DB_ROOT_PASSWD: seafile
      SEAFILE_ADMIN_EMAIL: "{{ ansible_nas_email }}"
      SEAFILE_ADMIN_PASSWORD: "{{ lookup('password', creds_direcrory +'/seafile/admin_password length=32') }}"
      SEAFILE_SERVER_LETSENCRYPT: "false"
      TIME_ZONE: "{{ ansible_nas_timezone }}"
    restart_policy: unless-stopped
    memory: 2g
    labels:
      traefik.enable: "{{ seafile_available_externally }}"
      traefik.http.services.seafile-svc.loadbalancer.server.port: "80"
      traefik.http.routers.seafile.rule: "Host(`seafile.{{ ansible_nas_domain }}`)"
      traefik.http.routers.seafile.tls: "true"
