---
- name: Create Traefik Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik_data_directory }}"
    - "{{ traefik_data_directory }}/custom"

- name: Template Traefik config.yml
  template:
    src: traefik/traefik.yml
    dest: "{{ traefik_data_directory }}/traefik.yml"

- name: Create web network
  docker_network:
    name: web

- name: Create Docker stats network
  docker_network:
    name: stats
  when: stats_enabled

- name: Create traefik-docker-socket-proxy network
  docker_network:
    name: traefik-docker-socket-proxy

- name: Traefik Docker Socket Proxy Container
  docker_container:
    name: traefik-docker-socket-proxy
    image: tecnativa/docker-socket-proxy
    labels:
      traefik.enable: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env:
      CONTAINERS: "1"
    purge_networks: true
    networks:
      - name: traefik-docker-socket-proxy
    networks_cli_compatible: false
    pull: true
    restart_policy: unless-stopped

- name: Traefik Docker Container
  docker_container:
    name: traefik
    image: "{{ traefik_docker_image }}"
    pull: true
    purge_networks: true
    networks:
      - name: web
      - name: traefik-docker-socket-proxy
      - "{{ ({ 'name': 'stats' }) if (stats_enabled | default(False)) or omit }}"
    networks_cli_compatible: false
    ports:
      - "{{traefik_port_http}}:{{traefik_port_http}}"
      - "{{traefik_port_https}}:{{traefik_port_https}}"
    volumes:
      - "{{ traefik_data_directory }}/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "{{ traefik_data_directory }}/custom:/etc/traefik/custom:ro"
      - "{{ traefik_data_directory }}/logs:/logs"
      - "{{ traefik_data_directory }}/acme:/acme"
    env:
      CF_API_EMAIL: "{{ cloudflare_email }}"
      CF_API_KEY: "{{ cloudflare_api_key }}"
    etc_hosts:
      host.docker.internal: "{{ host_docker_internal_ip }}"
    labels:
      com.centurylinklabs.watchtower.enable: "false"

      traefik.enable: "true"
      traefik.http.routers.api.rule: "Host(`traefik.{{ ansible_nas_domain }}`)"
      traefik.http.routers.api.service: "api@internal"

      traefik.http.routers.api.tls: "true"
      traefik.http.routers.api.tls.certResolver: cloudflare
      traefik.http.routers.api.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.api.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"

      traefik.http.routers.api.middlewares: "{% if ldap_enabled|default(false)|bool %}auth-sso{% endif %}"

      # Located in ldap.yml
      traefik.http.middlewares.auth-sso.forwardAuth.address: "http://authelia:9091/api/verify?rd=https://sso.{{ ansible_nas_domain }}/"
      traefik.http.middlewares.auth-sso.forwardAuth.trustForwardHeader: "true"
      traefik.http.middlewares.auth-sso.forwardAuth.authResponseHeaders: "Remote-User,Remote-Groups"

      traefik.http.middlewares.redirect-to-https.redirectScheme.scheme: "https"
      traefik.http.routers.redirs.rule: "hostregexp(`{host:.+}`)"
      traefik.http.routers.redirs.entrypoints: "http"
      traefik.http.routers.redirs.middlewares: "redirect-to-https"
    restart_policy: unless-stopped
    memory: 1g
