- name: Create Firefly III Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ firefly_data_directory }}/upload"
    - "{{ firefly_data_directory }}/export"

- name: Create Firefly user on Postgres
  postgresql_user:
    name: firefly
    password: "{{ lookup('password', creds_direcrory +'/firefly/firefly_postgres_passwd length=32') }}"
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
    state: present
    login_host: 127.0.0.1

- name: Create Firefly database on Postgres
  postgresql_db:
    name: firefly
    owner: firefly
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
    state: present
    login_host: 127.0.0.1

- name: Create Firefly III container
  docker_container:
    name: firefly
    image: "{{ firefly_image }}"
    pull: true
    volumes:
      - "{{ firefly_data_directory }}/export:/var/www/firefly-iii/storage/export:rw"
      - "{{ firefly_data_directory }}/upload:/var/www/firefly-iii/storage/upload:rw"
    purge_networks: true
    networks:
      - name: postgres
      - name: web
    ports:
      - "{{ firefly_port }}:8080"
    env:
      APP_ENV: "local"
      APP_KEY: "{{ lookup('password', creds_direcrory +'/firefly/firefly_app_key length=32') }}"
      DB_CONNECTION: "pgsql"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_DATABASE: "firefly"
      DB_USERNAME: "firefly"
      DB_PASSWORD: "{{ lookup('password', creds_direcrory +'/firefly/firefly_postgres_passwd length=32') }}"
      TRUSTED_PROXIES: "172.16.0.0/12"
      MAIL_HOST: "{{ smtp_host }}"
      MAIL_PORT: "{{ smtp_port }}"
      MAIL_USERNAME: "{{ smtp_username }}"
      MAIL_PASSWORD: "{{ smtp_password }}"
      MAIL_FROM: "{{ smtp_sender }}"
      MAIL_ENCRYPTION: "{{ smtp_secure }}"
      TZ: "{{ ansible_nas_timezone }}"
    restart_policy: always
    memory: 1g
    labels:
      traefik.enable: "{{ firefly_available_externally }}"
      traefik.http.services.firefly-svc.loadbalancer.server.port: "8080"
      traefik.http.routers.firefly.rule: "Host(`firefly.{{ ansible_nas_domain }}`)"
      traefik.http.routers.firefly.tls: "true"