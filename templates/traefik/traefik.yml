global:
  sendAnonymousUsage: false

log:
  level: {{ traefik_log_level }}
  format: common

{% if traefik_access_logs_enabled | default(False) %}
accessLog:
  filePath: /logs/traefik_access_log.json
  format: json
  filters:
    statusCodes: ["200-299", "300-302", "400-499", "500-599"]
  fields:
    defaultMode: drop
    names:
      ClientHost: keep
      RequestHost: keep
      RequestMethod: keep
      RequestPath: keep
      OriginStatus: keep
      ServiceName: keep
      Duration: keep
    headers:
      defaultMode: drop
      names:
          User-Agent: keep
{% endif %}

entryPoints:
  web:
    address: ":{{ traefik_port_http }}"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
    forwardedHeaders:
      trustedIPs:
        {{ traefik_forwardedHeaders_truestedIPs | to_nice_yaml | indent(width=8, indentfirst=False) }}
  websecure:
    address: ":{{ traefik_port_https }}"
    forwardedHeaders:
      trustedIPs:
        {{ traefik_forwardedHeaders_truestedIPs | to_nice_yaml | indent(width=8, indentfirst=False) }}

api:
  dashboard: true

serversTransport:
  insecureSkipVerify: true

{% if stats_enabled | default(False) %}
metrics:
  influxDB:
    address: "http://influxdb:8086"
    protocol: "http"
    database: "traefik"
    pushInterval: "{{ stat_traefik_push_interval }}"
{% endif %}

providers:
  docker:
    endpoint: "tcp://traefik-docker-socket-proxy:2375"
    network: web
    exposedByDefault: false
  file:
    directory: /etc/traefik/custom

certificatesResolvers:
  cloudflare:
    acme:
      email: "{{ ansible_nas_email }}"
{% if traefik_acme_staging|default(false)|bool %}
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
{% endif %}
      storage: /acme/acme.json
      dnsChallenge:
        provider: cloudflare
        resolvers:
          - "1.1.1.1:53"
          - "8.8.8.8:53"
