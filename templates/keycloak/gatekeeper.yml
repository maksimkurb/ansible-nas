# is the url for retrieve the openid configuration - normally the <server>/auth/realm/<realm_name>
discovery-url: "https://keycloak.{{ ansible_nas_domain }}/auth/realms/{{ gk_realm | default("master") }}"

# the client id for the 'client' application
client-id: "{{ gk_client_id }}"

# the secret associated to the 'client' application - note the client_secret is optional, required for
# oauth2 access_type=confidential i.e. the client is being verified
client-secret: "{{ gk_client_secret }}"

# the interface definition you wish the proxy to listen, all interfaces is specified as ':<port>'
listen: :3000

# whether to request offline access and use a refresh token
enable-refresh-tokens: true

# log all incoming requests
enable-logging: true

# log in json format
enable-json-logging: true

# do not redirec the request, simple 307 it
no-redirects: false

# the redirection url, essentially the site url, note: /oauth/callback is added at the end
redirection-url: "{{ gk_redirect_url }}"

# the encryption key used to encode the session state
encryption-key: "{{ gk_session_secret }}"

# the upstream endpoint which we should proxy request
upstream-url: "{{ gk_upstream_url }}"

# upstream-keepalives specified wheather you want keepalive on the upstream endpoint
upstream-keepalives: true

# skip the tls verification of the upstream url
skip-upstream-tls-verify: true
skip-openid-provider-tls-verify: true

# additional scopes to add to add to the default (openid+email+profile)
#scopes: {{ gk_scopes | default("[]") }}

# enables a more extra secuirty features
enable-security-filter: true

# a collection of resource i.e. urls that you wish to protect
resources:
  - uri: /*
    # the methods on this url that should be protected, if missing, we assuming all
    methods:
      - GET
# an array of origins (Access-Control-Allow-Origin)
# cors-origins: []

# an array of headers to apply (Access-Control-Allow-Headers)
# cors-headers: []

# an array of expose headers (Access-Control-Expose-Headers)
# cors-exposed-headers: []

# an array of methods (Access-Control-Allow-Methods)
# cors-methods: []

# the credentials flag (Access-Control-Allow-Credentials)
# cors-credentials: true|false

# the max age (Access-Control-Max-Age)
# cors-max-age: 1h
